'use strict';

// Задание 1:

console.log('Record 1');
setTimeout(() => {
    console.log('Record 2');
    Promise.resolve().then(() => {
        setTimeout(() => {
            сonsole.log('Record 3');
            Promise.resolve().then(() => {
                console.log('Record 4');
            });
        });
    });
});
console.log('Record 5');
Promise.resolve().then(() => Promise.resolve().then(() => console.log('Record 6')));


// Решение:
// Консоль выведет Record в следующем порядке:
// 1 - т.к. происходит простая синхронная операция вывода данных в консоль. Она выполняется моментально.
// 5 - т.к. происходит простая синхронная операция вывода данных в консоль. Она выполняется моментально. После 1 т.к. код считывается сверху вниз по порядку.
// 6 - т.к. первым в очередь выполнения после фазы Poll заносится промис.
// 2 - т.к. далее в очередь выполнения после фазы Poll заносится таймер.
// 3 - т.к. таймер выполняет простую синхронную операцию вывода данных в консоль.
// 4 - т.к. промис вызывается таймером.
